package com.makaia.grupo4.entrevista.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.makaia.grupo4.entrevista.dto.request.CreateMentor;
import com.makaia.grupo4.entrevista.dto.request.LoginDTO;
import com.makaia.grupo4.entrevista.dto.response.ResponseLogin;
import com.makaia.grupo4.entrevista.dto.response.ResponseMentor;
import com.makaia.grupo4.entrevista.exceptions.EntrevistaApiException;
import com.makaia.grupo4.entrevista.repositories.MentorRespository;
import com.makaia.grupo4.entrevista.services.MentorService;
import com.makaia.grupo4.entrevista.services.UserService;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/api/v1/users") // This means URL's start with /demo (after Application path)
public class UserController {
  @Autowired // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private UserService userService;

  @Autowired
  private MentorService mentorService;

  @Autowired
  MentorRespository userRepository;

  @PostMapping(path = "/login")
  public @ResponseBody ResponseEntity<ResponseLogin> loginUser(@RequestBody LoginDTO userData) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    try {
      return userService.login(userData);
    } catch (Exception e) {
      throw new EntrevistaApiException(HttpStatus.INTERNAL_SERVER_ERROR, e.getMessage());
    }

  }

  @PostMapping(path = "/signup")
  public @ResponseBody ResponseEntity<ResponseMentor> addNewMentor(@RequestBody CreateMentor userData) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    try {
      return mentorService.createMentor(userData);
    } catch (IllegalArgumentException e) {
      throw new EntrevistaApiException(HttpStatus.BAD_REQUEST, e.getMessage());
    }

  }
}
